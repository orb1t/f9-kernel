# -*- mode: python; coding: utf-8; -*-

#  Codezero -- a microkernel for embedded systems.
#
#  Copyright Â© 2009  B Labs Ltd
#
#  This program is free software: you can redistribute it and/or modify it under the terms of the GNU
#  General Public License as published by the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
#  License for more details.
#
#  You should have received a copy of the GNU General Public License along with this program.  If not, see
#  <http://www.gnu.org/licenses/>.
#
#  Author: Russel Winder

import os, sys

Import('env')

PROJRELROOT = '../../..'
sys.path.append(PROJRELROOT)

from scripts.config.projpaths import *
from scripts.config.configuration import *

config  = configuration_retrieve()
arch    = config.arch
subarch = config.subarch

e = env.Clone()
e.Append(CPPPATH = ['include', 'include/l4lib/arch', LIBMEM_INCLUDE],
	     CPPFLAGS = ' -include l4lib/macros.h ')

objects = e.StaticObject(Glob('src/*.c') + \
                         Glob('src/lib/*.c') + \
                         Glob('src/lib/cap/*.c')) + \
                         Glob('src/lib/thread/*.c') + \
                         Glob('src/arch/' + arch + '/exregs.c') + \
                         Glob('src/arch/' + arch + '/*.S') + \
			 Glob('src/arch/' + arch + '/' + subarch + '/*.[cS]')

library = e.StaticLibrary('l4', objects)
Return('library')
